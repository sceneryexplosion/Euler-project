#Each new term in the Fibonacci sequence is generated by adding the previous two terms.
#By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not exceed
#four million, find the sum of the even-valued terms.

def fib(antal):
    count = 0
    list = [1, 2]
    while count < antal:
        list.append(list[-1]+list[-2])
        count += 1
    return(list)

#checks for even numbers in a list and returns a new list with only even numbers
def check_for_even(list):
    temp = []
    i = 0

    while i < len(list):

        if list[i]%2 == 0:
            temp.append(list[i])
        else:
            pass
        i += 1
    return(temp)



#this is to start the list at the correct position
count = fib(1)
i = 0

#this is to make sure the value is below 4 000 000 otherwise presents 5 700 000
while  count[-1]+count[-2]< 4000000:

    count = fib(i)
    i += 1



print(check_for_even(count))
print(sum(check_for_even(count)))
# 4613732
