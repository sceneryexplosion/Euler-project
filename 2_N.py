#Each new term in the Fibonacci sequence is generated by adding the previous two terms.
#By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not exceed
#four million, find the sum of the even-valued terms.


#input the highest number you would like and the function returns a list
#with all the Fibonacci numbers below that value
def fib(upperlimit):
    start_list = [1, 2]

    #Takes the two last values of the list and summs these if their
    #Combined value is less then "upperlimit"
    while  start_list[-1]+start_list[-2]< upperlimit:
        start_list.append(start_list[-1]+start_list[-2])

    return(start_list)


#Checks the inputed list for even numbers and returns these as a new list
def check_for_even(list):
    temp = []
    i = 0

    while i < len(list):

        if list[i]%2 == 0:
            temp.append(list[i])
        else:
            pass
        i += 1

    return(temp)


value = 4000000
print(sum(check_for_even(fib(value))))
# 4613732
